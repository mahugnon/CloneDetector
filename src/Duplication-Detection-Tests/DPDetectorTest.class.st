Class {
	#name : #DPDetectorTest,
	#superclass : #TestCase,
	#category : #'Duplication-Detection-Tests'
}

{ #category : #samples }
DPDetectorTest >> mantisCommentsExample [
	^ '   5864  .!SHOW"PCT PART = ";PCT_PART
   5865  .!WAIT
   5866  EXIT
   5867  !
   5868  ! BLOCAGE DE L''EMPLOYEUR JUSQU''A MISE A JOUR DU DERNIER NUMERO DE POLICE
   5869  !
   5870  ENTRY BLOCAGE_EMPL
   5871  .DO TRAP_ON_UP_SCRN_EMPL
   5872  .DO GETFIRST_UP_SCRN_EMPL_1(NUMERO_EMPL)
   5873  .IF FSI_UP_SCRN_EMPL<>"GOOD"
   5874  ..MSG="DLPLA020 PROBLEME DB POUR CET EMPLOYEUR   "+FSI_UP_SCRN_EMPL
   5875  ..DO TRAP_OFF_UP_SCRN_EMPL
   5880  ..IF((CD_RENOUV=1)AND(MSG<>""))
   5890  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   5900  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   5910  ..END
   5920  ..IF((CD_RENOUV=2)AND(MSG<>""))
   5930  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   5940  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   5950  ...''CKDG_POL_AFF
   5960  ..END
   5970  .END
   5980  .IF((TERMINAL_EMPL<>"")AND(TERMINAL_EMPL<>TERMINAL))
   5990  ..MSG="DLPLA020  EMPLOYEUR DEJA RETENU PAR LE TERMINAL "+TERMINAL_EMPL
   6000  ..DO TRAP_OFF_UP_SCRN_EMPL
   6010  ..IF((CD_RENOUV=1)AND(MSG<>""))
   6020  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6030  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   6040  ..END
   6050  ..IF((CD_RENOUV=2)AND(MSG<>""))
   6060  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
 6070  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   6080  ...''CKDG_POL_AFF
   6090  ..END
   6100  .ELSE
   6110  ..TERMINAL_EMPL=TERMINAL
   6120  ..DO UPDATE_UP_SCRN_EMPL
   6130  .END
   6140  .DO TRAP_OFF_UP_SCRN_EMPL
   6150  EXIT
   6160  !
   6170  !LECTURE DES DIFFERENTES DONNEES NECESSAIRES DE L''EMPLOYEUR
   6180  !
   6190  ENTRY VERIF_DONNEE_EMPL
   6200  .DO TRAP_ON_RD_TAUX_EMPL
   6210  .DO GETFIRST_RD_TAUX_EMPL_1(NUMERO_EMPL)
   6220  .IF FSI_RD_TAUX_EMPL<>"GOOD"
   6230  ..IF FSI_RD_TAUX_EMPL="NOTFOUND"
   6240  ...MSG="DLPLA020  EMPLOYEUR  INEXISTANT EN DB !!!! "
   6250  ...CODE_ERREUR="E005"
   6260  ..ELSE
   6270  ...MSG="DLPLA020 PROBLEME DE LECTURE DE CET EMPLOYEUR !!"+FSI(UP_TAUX_E MPL)
   6280  ...CODE_ERREUR="X001"
   6290  ..END
   6300  ..DO TRAP_OFF_RD_TAUX_EMPL
   6310  ..IF((CD_RENOUV=1)AND(MSG<>""))
   6320  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6330  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   6340  ..END
   6350  ..IF((CD_RENOUV=2)AND(MSG<>""))
   6360  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6370  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   6380  ...''CKDG_POL_AFF
   6390  ..END
   6430  .END
   6440  .DO TRAP_OFF_RD_TAUX_EMPL
   6450  .ER_EMPL=1
   6460  .MSG="DLPLA020 MANQ. DS EMPL.:"
   6470  .IF PLAF_SECURI_EMPL=0
   6480  ..MSG=MSG+" PLAF.SS."
   6490  ..ER_EMPL=2
   6500  ..CODE_ERREUR="E001"
   6510  .END
   6520  .IF PLAF_MALAD_EMPL=0
   6530  ..IF ER_EMPL=1
   6540  ...MSG=MSG+" PLAF.MAL."
   6550  ..ELSE
   6560  ...MSG=MSG+" MAL."
   6570  ..END
   6580  ..ER_EMPL=2
   6590  ..CODE_ERREUR="E001"
   6600  .END
   6601  .IF PLAF_CIE_EMPL=0
   6602  ..IF ER_EMPL=1
   6603  ...MSG=MSG+" PLAF.CIE"
   6604  ..ELSE
   6605  ...MSG=MSG+" CIE"
   6606  ..END
   6607  ..ER_EMPL=2
   6608  ..CODE_ERREUR="E015"
   6609  .END
   6610  .IF TAUX_EP_DEC_EMPL=0
   6620  ..MSG=MSG+" TAUX EP1"
   6630  ..ER_EMPL=3
   6640  ..CODE_ERREUR="E002"
   6650  .END
   6660  .IF TAUX_EP_RET_EMPL=0
   6670  ..IF ER_EMPL=3
   6680  ...MSG=MSG+" EP2"
   6690  ..ELSE
   6700  ...MSG=MSG+" TAUX EP2"
   6710  ..END
   6720  ..ER_EMPL=3
   6730  ..CODE_ERREUR="E002"
   6740  .END
   6750  .IF AGE_RTO_EMPL=0
   6760  ..MSG=MSG+" AGE RTO"
   6770  ..ER_EMPL=4
   6780  ..CODE_ERREUR="E003"
   6790  .END
   4863  .!SHOW"PCT PART = ";PCT_PART
   6864  .!WAIT
   5865  EXIT
   4866  !
   4867  ! BLOCAGE DE L''EMPLOYEUR JUSQU''A MISE A JOUR DU DERNIER NUMERO DE POLICE
   5869  !
   5870  ENTRY BLOCAGE_EMPL
   5871  .DO TRAP_ON_UP_SCRN_EMPL
   5872  .DO GETFIRST_UP_SCRN_EMPL_1(NUMERO_EMPL)
   5873  .IF FSI_UP_SCRN_EMPL<>"GOOD"
   5874  ..MSG="DLPLA020 PROBLEME DB POUR CET EMPLOYEUR   "+FSI_UP_SCRN_EMPL
   5875  ..DO TRAP_OFF_UP_SCRN_EMPL
   5880  ..IF((CD_RENOUV=1)AND(MSG<>""))
   5890  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   5900  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   5910  ..END
   5920  ..IF((CD_RENOUV=2)AND(MSG<>""))
   5930  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   5940  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   5950  ...''CKDG_POL_AFF
   5960  ..END
   5970  .END
   5980  .IF((TERMINAL_EMPL<>"")AND(TERMINAL_EMPL<>TERMINAL))
   5990  ..MSG="DLPLA020  EMPLOYEUR DEJA RETENU PAR LE TERMINAL "+TERMINAL_EMPL
   6000  ..DO TRAP_OFF_UP_SCRN_EMPL
   6010  ..IF((CD_RENOUV=1)AND(MSG<>""))
   6020  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6030  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   6040  ..END
   6050  ..IF((CD_RENOUV=2)AND(MSG<>""))
   6060  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
'
]

{ #category : #samples }
DPDetectorTest >> mantisExample [
	^ '    10  ENTRY DLPLA020B(POLICE_NO,CAPITAL_ASSURE,POLICE_TYPE,PRIME_FRACT,
     20  .''SUCCURSALE,DATE_EFFET_POLICE,CD_RENOUV)
     30  .! CE PROGRAMME EST BASE SUR LA FICHE RESUME DU PLAN DE L''EMPLOYEUR
     40  .! NUMERO 0020 : WANG EUROPE
     41  .!***********************************************************************
     42  .! 19991207    : ADAPTATION AU 3,25                                  FPE
     43  .!***********************************************************************
     44  .! CONVERSION EN EUR (AOUT 2001 EN TEST)                             D.H.
     45  .!***********************************************************************
     46  .! 20080613 : ADAPTATION A LA L.P.C. + AJOUT DU CODE SERVICE
     47  .!            + SUPPRESSION DE L''EMISSION COMPLEMENTAIRE             D.H.
     48  .!***********************************************************************
     60  .DO VIEW_RD_TAUX_EMPL:! ("RD_GROUPE_TAUX_EMPL")
     70  .DO VIEW_UP_SCRN_EMPL:! ("UP_GROUPE_SCRN_EMPL")
    100  .TEXT IT_CODE_FRACTION_RENTE(2)
    110  .TEXT IT_CODE_FRACTION_PRIME(2)
    120  .TEXT COD_FRAC_PRI(2),CD_FRAC_PRIM_DEC(2),CD_FR_RENT_DEC(2)
    130  .TEXT COD_FRAC_REN(2),CD_FR_RENT_RETR(2)
    140  .TEXT MSG(80),ERR_AFF(3),CODE_ERREUR(4),AUX_T(4),DATEFFET(8)
    150  .IMAX=111
    160  .I2MAX=24
    170  .BIG L(IMAX,3)
    180  .BIG D(IMAX,3)
    190  .BIG N(IMAX,3)
    200  .BIG S(IMAX,3)
    210  .BIG C(IMAX,3)
    220  .BIG M(IMAX,3)
    230  .BIG R(IMAX,3)
    240  .BIG V(IMAX,3)
    250  .BIG DAT_NAIS_ENF(I2MAX)
    260  .BIG AGE_ENF_AN(I2MAX)
    270  .BIG AGE_ENF_MOIS(I2MAX)
    280  .BIG TAUXAUX
    290  .BIG TAUX_RTOT
    300  .BIG TAUX_RTO(24)
    310  .BIG TAUX_RTO_CP(24)
    311  .BIG PCT_PART
    312  .!------------------------------------------------------------------
    313  .!--   INIT ET APPEL ROUTINE GENDATE POUR DATE SYSTEME AN 2000
    314  .!------------------------------------------------------------------
    315  .TEXT DATE_CHAR_2000(8),DATE_SLAMJ_2000(10),DATE_SLJMA_2000(10)
    316  .BIG DATE_NUM_2000
    317  .DATE_CHAR_2000="00000000"
    318  .DATE_SLAMJ_2000="0000000000"
    319  .DATE_SLJMA_2000="0000000000"
    320  .DATE_NUM_2000=0
    321  .ANNEE_N_2000=0
    322  .JOUR_N_2000=0
    323  .MOIS_N_2000=0
    324  .PROGRAM GENDATE("GENDATE","GROUPE")
    325  .DO GENDATE(DATE_CHAR_2000,ANNEE_N_2000,MOIS_N_2000,JOUR_N_2000,
    326  .''DATE_NUM_2000,DATE_SLAMJ_2000,DATE_SLJMA_2000)
    327  .RELEASE GENDATE
    328  .!------------------------------------------------------------------
    329  .TC=0
    330  .TI=0
    340  .I=1
    350  .FILE DOSSIER("GROUPE:NW001_AFF","GROUPE")
    360  .FILE CONJOINT("GROUPE:NW002_CON","GROUPE")
    370  .FILE ENFANT("GROUPE:NW003_ENF","GROUPE")
    380  .FILE RESULTATA("GROUPE:DNW017_RESA","GROUPE")
    390  .FILE RESULTATB("GROUPE:DNW017_RESB","GROUPE")
    400  .FILE RESULTATC("GROUPE:DNW017_RESC","GROUPE")
    410  .FILE RESULTATD("GROUPE:DNW017_RESD","GROUPE")
    420  .GET DOSSIER(TERMINAL)EQUAL
    430  .GET RESULTATA(TERMINAL)EQUAL
    440  .GET RESULTATB(TERMINAL)EQUAL
    450  .GET RESULTATC(TERMINAL)EQUAL
    460  .GET RESULTATD(TERMINAL)EQUAL
    470  .NUMERO_EMPL=NUMERO_EMPL_AFF
    471  .!******************************************************************
    472  .!                       EMISSION AUTOMATIQUE
    473  .!******************************************************************
    480  .IF CD_RENOUV=1
    490  ..DO BLOCAGE_EMPL
    500  ..DO VERIF_DONNEE_EMPL
    510  ..DO VERIF_DONNEE_AFF
    520  ..DO CALC_AGE_AFF
    540  ..IF CODE_SEXE_AFF="M"
    550  ...SEX=1
    560  ..ELSE
    570  ...SEX=2
    580  ..END
    700  ..DO CALC_AGE_RETR
    701  ..DO CALC_PCT_PART
    702  ..!
    766  ..PROGRAM CALCUL_CKDG_AFF("DLPRTCKDG","GROUPE")
    767  ..CKDG_POL_AFF=0
    768  ..DO CALCUL_CKDG_AFF(DERN_NO_POL_EMPL,NUMERO_EMPL,DT_NAIS_AFF,
    769  ..''CKDG_POL_AFF)
    770  ..RELEASE CALCUL_CKDG_AFF
    771  ..DO CONSTANTES_PLAN
    772  ..DO CALCUL_PARAM_PRIME
    780  ..DO CALCUL_PARAM_RENTE
    790  ..DO CALCUL_DUREE_CONT
    791  ..DO CALCUL_SAL_DEC
    810  ..DO CALCUL_TABLE_ACTU
    820  ..DERN_NO_POL_AFF=DERN_NO_POL_EMPL-(NUMERO_EMPL*100000)
    830  ..!
    840  ..!AFFILIATION AU PLAN INVALIDITE
    850  ..!
    860  ..PROGRAM CALC_PER("DLPRTPER","GROUPE")
    870  ..DUR_SERV_AA=0
    880  ..DUR_SERV_MM=0
    890  ..DO CALC_PER(DATE_ENTREE_AFF,DATE_EFFET_POLICE,DUR_SERV_AA,DUR_SERV_MM)
    900  ..RELEASE CALC_PER
    901  ..!SHOW"DUR SERV AA = ";DUR_SERV_AA;"DUR SERV MM = ";DUR_SERV_MM
    902  ..!WAIT
    941  ..OK_INV=1
    961  ..IF((AGE_AFF_AN<21)OR(AGE_AFF_AN>=60))
    971  ...OK_INV=0
   1000  ..END
   1004  ..DATEFFET=TXT(DATE_EFFET_POLICE)
   1006  ..JOUREFFET=VALUE(DATEFFET(7,8))
   1007  ..IF(JOUREFFET<>1)
   1010  ...OK_INV=0
   1011  ..END
   1100  ..!SHOW"OK_INV=";OK_INV;
   1110  ..!WAIT
   1160  ..DO VERIF_CODES_EP
   1161  ..!
   1162  ..! GARANTIE INVALIDITE
   1163  ..! 20080613 : AJOUT DU CODE SERVICE
   1164  ..!
   1900  ..IF OK_INV=1
   1910  ...DO CALC_INVAL
   1911  ...DO INVAL_EXON
   1920  ...DO INVAL_RENT
   1930  ...DO INVAL_PRI
   1940  ...IF((PRI_FR_INV_AP<>0)OR(REN_INVAL_AP<>0))
   1950  ....POLICE_TYPE(7)="A"
   1960  ....POLICE_NO(7)=DERN_NO_POL_AFF+1
   1970  ....DERN_NO_POL_AFF=POLICE_NO(7)
   1980  ....NUM_POL_INV_AP=POLICE_NO(7)
   1990  ....PRIME_FRACT(7)=PRI_FR_INV_AP
   2000  ....CAPITAL_ASSURE(7)=REN_INVAL_AP
   2001  ....!IF(CATEGORIE_AFF="L")
   2002  ....IF(CODE_SERVICE_AFF(1,1)="L")
   2003  .....SUCCURSALE(7)=4
   2004  ....ELSE
   2010  .....SUCCURSALE(7)=1
   2020  ....END
   2021  ...END
   2030  ..END
   2040  ..DO SAUVETAGE
   2050  .END
   2051  .!******************************************************************
   2052  .!             EMISSION AUTOMATIQUE COMPLEMENTAIRE
   2053  .! 20080613 : SUPPRESSION DE L''EMISSION COMPLEMENTAIRE
   2054  .!******************************************************************
   2055  .!IF CD_RENOUV=2
   2056  .!.FILE COMPLEM("MODIF_COMPL","GROUPE")
   2057  .!.GET COMPLEM(TERMINAL)EQUAL
   2058  .!.DATE_EFFET_POLICE=DATE_EFFET_POL
   2059  .!.DATE_EFFET_POLICE_AA=INT(DATE_EFFET_POLICE/10000)
   2060  .!.AUX=DATE_EFFET_POLICE-(DATE_EFFET_POLICE_AA*10000)
   2061  .!.DATE_EFFET_POLICE_MM=INT(AUX/100)
   2062  .!.DATE_EFFET_POLICE_JJ=AUX-(DATE_EFFET_POLICE_MM*100)
   2063  .!.DO BLOCAGE_EMPL
   2064  .!.DO VERIF_DONNEE_EMPL
   2065  .!.DO VERIF_DONNEE_AFF
   2066  .!.DO CALC_AGE_AFF
   2067  .!.IF CODE_SEXE_AFF="M"
   2068  .!..SEX=1
   2069  .!.ELSE
   2070  .!..SEX=2
   2071  .!.END
   2080  .!.DO CALC_AGE_RETR
   2081  .!.DO CALC_PCT_PART
   2173  .!.DO CONSTANTES_PLAN
   2174  .!.DO CALCUL_PARAM_PRIME
   2175  .!DO CALCUL_PARAM_RENTE
   2176  .!DO CALCUL_DUREE_CONT
   2177  .!DO CALCUL_SAL_DEC
   2178  .!DO CALCUL_T1_T2
   2179  .!DO CALCUL_TABLE_ACTU
   2180  .!DERN_NO_POL_AFF=DERN_NO_POL_EMPL-(NUMERO_EMPL*100000)
   2181  .!
   2182  .!OK_POL_RET=0
   2183  .!I=1
   2184  .!WHILE(I<=12)
   2185  .!.AUX_T=GEST_P(I)
   2186  .!.IF((TYPE_P(I)="A")AND(AUX_T(1,1)="R"))
   2187  .!..NUM_POL_RET_AP=NUM_P(I)
   2188  .!.END
   2189  .!.IF((TYPE_P(I)="C")AND(AUX_T(1,1)="R"))
   2190  .!..NUM_POL_RET_CP=NUM_P(I)
   2191  .!.END
   2192  .!.IF((TYPE_P(I)="A")AND(AUX_T(1,1)="D"))
   2193  .!..NUM_POL_DEC_AP=NUM_P(I)
   2194  .!.END
   2197  .!.IF((TYPE_P(I)="A")AND(AUX_T(1,1)="I"))
   2198  .!..NUM_POL_INV_AP=NUM_P(I)
   2199  .!..OK_POL_INV=1
   2200  .!.END
   2201  .!.IF GEST_P(I,1)="R"
   2202  .!..OK_POL_RET=1
   2203  .!.END
   2204  .!.I=I+1
   2205  .!END
   2206  .!SHOW"NUM POL RET AP = ";NUM_POL_RET_AP
   2207  .!SHOW"NUM POL RET CP = ";NUM_POL_RET_CP
   2208  .!SHOW"NUM POL DEC AP = ";NUM_POL_DEC_AP
   2209  .!SHOW"NUM POL INV AP = ";NUM_POL_INV_AP
   2210  .!WAIT
   2211  .!PROGRAM CALC_PER("DLPRTPER","GROUPE")
   2212  .!DUR_SERV_AA=0
   2213  .!DUR_SERV_MM=0
   2214  .!DO CALC_PER(DATE_ENTREE_AFF,DATE_EFFET_POLICE,DUR_SERV_AA,DUR_SERV_MM)
   2215  .!RELEASE CALC_PER
   2216  .!SHOW"DUR SERV AA = ";DUR_SERV_AA;"DUR SERV MM = ";DUR_SERV_MM
   2217  .!WAIT
   2218  .!
   2219  .!OK_RETR=1
   2220  .!OK_INV=1
   2221  .!
   2222  .! 20080613 : AJOUT DU CODE SERVICE
   2223  .!
   2224  .!IF(CATEGORIE_AFF="L")
   2225  .!IF(CODE_SERVICE_AFF(1,1)="L")
   2226  .!.OK_RETR=0
   2227  .!END
   2228  .!IF(AGE_AFF_AN<25)OR(DATE_ENTREE_AFF>=19981201)
   2229  .!.OK_RETR=0
   2230  .!END
   2231  .!IF((AGE_AFF_AN<21)OR(AGE_AFF_AN>=60))
   2232  .!.OK_INV=0
   2233  .!END
   2234  .!DATEFFET=TXT(DATE_EFFET_POLICE)
   2235  .!JOUREFFET=VALUE(DATEFFET(7,8))
   2236  .!IF(JOUREFFET<>1)
   2237  .!.OK_RETR=0
   2238  .!.OK_INV=0
   2239  .!END
   2240  .!!SHOW"OK RETR = ";OK_RETR;"OK INV = ";OK_INV
   2241  .!!WAIT
   2242  .!
   2243  .!DO VERIF_CODES_EP
   2244  .!
   2245  .! GARANTIE RETRAITE
   2246  .!
   2247  .!IF((OK_RETR=1)AND(OK_POL_RET=0))
   2248  .!.DO CALC_RETRAITE
   2249  .!.DO RETRAITE_TAUX_CDSR
   2250  .!.DO RETRAITE_COTIS
   2251  .!.DO RETRAITE_CAP_CP
   2252  .!.DO RETRAITE_CAP_TOTAL
   2253  .!.IF((PRIM_FRAC_CP<>0)OR(CAP_CP_RETR<>0))
   2254  .!..POLICE_TYPE(3)="C"
   2255  .!..CAPITAL_ASSURE(3)=CAP_CP_RETR
   2256  .!..PRIME_FRACT(3)=PRIM_FRAC_CP
   2257  .!..POLICE_NO(3)=DERN_NO_POL_AFF+1
   2258  .!..DERN_NO_POL_AFF=POLICE_NO(3)
   2259  .!..NUM_POL_RET_CP=POLICE_NO(3)
   2260  .!..SUCCURSALE(3)=1
   2261  .!.ELSE
   2262  .!..TAUX_PRI_RETR_CP=0
   2263  .!..TARIF_RETR_COT=0
   2264  .!.END
   2265  .!END
   2266  .!
   2267  .! GARANTIE INVALIDITE
   2268  .! 20080613 : AJOUT DU CODE SERVICE
   2269  .!
   2270  .!IF(OK_INV=1)AND(OK_POL_INV=0)
   2271  .!.DO CALC_INVAL
   2272  .!.DO INVAL_RENT
   2273  .!.DO INVAL_PRI
   2274  .!.IF((PRI_FR_INV_AP<>0)OR(REN_INVAL_AP<>0))
   2275  .!..POLICE_TYPE(7)="A"
   2276  .!..POLICE_NO(7)=DERN_NO_POL_AFF+1
   2277  .!..DERN_NO_POL_AFF=POLICE_NO(7)
   2278  .!..NUM_POL_INV_AP=POLICE_NO(7)
   2279  .!..PRIME_FRACT(7)=PRI_FR_INV_AP
   2280  .!..CAPITAL_ASSURE(7)=REN_INVAL_AP
   2281  .!..!IF(CATEGORIE_AFF="L")
   2282  .!..IF(CODE_SERVICE_AFF(1,1)="L")
   2283  .!...SUCCURSALE(7)=4
   2284  .!..ELSE
   2285  .!...SUCCURSALE(7)=1
   2286  .!..END
   2287  .!.END
   2288  .!END
   2289  .!DO INVAL_EXON
   2290  .!DO SAUVETAGE
   2291  .!END
   3760  EXIT
   3770  !
   3780  ! CONSTANTES UTILISEES DANS LE PLAN
   3790  !
   3800  ENTRY CONSTANTES_PLAN
   3810  .COD_FRAC_PRI="19"
   3820  .CD_FRAC_PRIM=COD_FRAC_PRI
   3830  .CD_FRAC_PRIM_INV=COD_FRAC_PRI
   3840  .CD_FRAC_PRIM_DEC="13"
   3870  .COD_FRAC_REN="19"
   3880  .CD_FR_RENT_DEC="  "
   3900  .CD_FR_RENT_INV=COD_FRAC_REN
   3910  .CD_FR_RENT_RETR="  "
   3920  .INDICE=1
   3930  .CODE_PB_DEC="E"
   3940  .CODE_PB_RET_AP=" "
   3950  .CODE_PB_RET_CP="S"
   3960  EXIT
   3970  !
   3980  ! CALCUL DE L''AGE DE L''AFFILIE
   3990  !
   4000  ENTRY CALC_AGE_AFF
   4010  .PROGRAM CALC_AGE("DLPRTAGE","GROUPE")
   4020  .AGE_AFF_AN=0
   4030  .AGE_AFF_MOIS=0
   4040  .DO CALC_AGE(DATE_NAISS_AFF,DATE_EFFET_POLICE,AGE_AFF_AN,AGE_AFF_MOIS)
   4050  .RELEASE CALC_AGE
   4051  .!SHOW"AGE AFF AN =";AGE_AFF_AN
   4052  .!SHOW"AGE AFF MOIS =";AGE_AFF_MOIS
   4053  .!WAIT
   4060  EXIT
   4170  !
   4180  ! VERIFICATION DES DONNEES DU DOSSIER FACULTATIVES
   4181  ! 20080613 : AJOUT DU CODE SERVICE
   4190  !
   4200  ENTRY VERIF_DONNEE_AFF
   4210  .ERR_AFF=""
   4270  .IF SALAIRE_AFF=0
   4280  ..MSG="DLPLA020  SALAIRE DE L''AFFILIE MANQUANT"
   4290  ..ERR_AFF="SAL"
   4300  ..CODE_ERREUR="D002"
   4310  .END
   4320  .IF DATE_ENTREE_AFF=0
   4330  ..MSG="DLPLA020  DATE D''ENTREE EN SERVICE DE L''AFFILIE MANQUANTE "
   4340  ..ERR_AFF="DAT"
   4350  ..CODE_ERREUR="D003"
   4360  .END
   4362  .IF((CODE_SERVICE_AFF(1,1)<>"")AND(CODE_SERVICE_AFF(1,1)<>" "))
   4363  ..IF((CODE_SERVICE_AFF(1,1)<>"E")AND(CODE_SERVICE_AFF(1,1)<>"L"))
   4364  ...MSG="DLPLA020  CODE SERVICE INVALIDE (CODES CORRECTS = E/L)"
   4365  ...ERR_AFF="CDS"
   4366  ...CODE_ERREUR="D014"
   4367  ..END
   4368  .END
   4369  .IF((CODE_SERVICE_AFF(2,2)<>"")AND(CODE_SERVICE_AFF(2,2)<>" "))OR
   4370  ..''((CODE_SERVICE_AFF(3,3)<>"")AND(CODE_SERVICE_AFF(3,3)<>" "))OR
   4371  ..''((CODE_SERVICE_AFF(4,4)<>"")AND(CODE_SERVICE_AFF(4,4)<>" "))OR
   4372  ..''((CODE_SERVICE_AFF(5,5)<>"")AND(CODE_SERVICE_AFF(5,5)<>" "))OR
   4373  ..''((CODE_SERVICE_AFF(6,6)<>"")AND(CODE_SERVICE_AFF(6,6)<>" "))OR
   4374  ..''((CODE_SERVICE_AFF(7,7)<>"")AND(CODE_SERVICE_AFF(7,7)<>" "))OR
   4375  ..''((CODE_SERVICE_AFF(8,8)<>"")AND(CODE_SERVICE_AFF(8,8)<>" "))OR
   4376  ..''((CODE_SERVICE_AFF(9,9)<>"")AND(CODE_SERVICE_AFF(9,9)<>" "))OR
   4377  ..''((CODE_SERVICE_AFF(10,10)<>"")AND(CODE_SERVICE_AFF(10,10)<>" "))
   4378  ..MSG="DLPLA020  VEUILLEZ CADRER LE CODE SERVICE A GAUCHE S.V.P."
   4379  ..ERR_AFF="CDS"
   4380  ..CODE_ERREUR="D014"
   4381  .END
   4382  .IF((CODE_SERVICE_AFF(1,1)="")OR(CODE_SERVICE_AFF(1,1)=" "))AND
   4383  ..''((CODE_SERVICE_AFF(2,2)="")OR(CODE_SERVICE_AFF(2,2)=" "))AND
   4384  ..''((CODE_SERVICE_AFF(3,3)="")OR(CODE_SERVICE_AFF(3,3)=" "))AND
   4385  ..''((CODE_SERVICE_AFF(4,4)="")OR(CODE_SERVICE_AFF(4,4)=" "))AND
   4386  ..''((CODE_SERVICE_AFF(5,5)="")OR(CODE_SERVICE_AFF(5,5)=" "))AND
   4387  ..''((CODE_SERVICE_AFF(6,6)="")OR(CODE_SERVICE_AFF(6,6)=" "))AND
   4388  ..''((CODE_SERVICE_AFF(7,7)="")OR(CODE_SERVICE_AFF(7,7)=" "))AND
   4389  ..''((CODE_SERVICE_AFF(8,8)="")OR(CODE_SERVICE_AFF(8,8)=" "))AND
   4390  ..''((CODE_SERVICE_AFF(9,9)="")OR(CODE_SERVICE_AFF(9,9)=" "))AND
   4391  ..''((CODE_SERVICE_AFF(10,10)="")OR(CODE_SERVICE_AFF(10,10)=" "))
   4392  ..MSG="DLPLA020  CODE SERVICE MANQUANT"
   4393  ..ERR_AFF="CDS"
   4394  ..CODE_ERREUR="D013"
   4395  .END
   4396  .IF((CATEGORIE_AFF<>"E")AND(CATEGORIE_AFF<>"G")AND(CATEGORIE_AFF<>"J")AND
   4397  ..''(CATEGORIE_AFF<>"K")AND(CATEGORIE_AFF<>"T")AND(CATEGORIE_AFF<>"F")AND
   4398  ..''(CATEGORIE_AFF<>"Q")AND(CATEGORIE_AFF<>"W")AND(CATEGORIE_AFF<>"U")AND
   4399  ..''(CATEGORIE_AFF<>"V")AND(CATEGORIE_AFF<>"Y")AND(CATEGORIE_AFF<>"Z")AND
   4400  ..''(CATEGORIE_AFF<>"1")AND(CATEGORIE_AFF<>"2")AND(CATEGORIE_AFF<>"3")AND
   4401  ..''(CATEGORIE_AFF<>"4")AND(CATEGORIE_AFF<>"5")AND(CATEGORIE_AFF<>"6")AND
   4402  ..''(CATEGORIE_AFF<>"7")AND(CATEGORIE_AFF<>"8")AND
   4403  ..''(CATEGORIE_AFF<>"L"))
   4404  ..MSG="DLPLA020 CAT.INV.(E/L=TPS PLEIN-G/J/K/T/F/Q/W/U/V/Y/Z/1/2/3/4/5/6/7/8=PART.)"
   4405  ..ERR_AFF="CDC"
   4406  ..CODE_ERREUR="D005"
   4407  .END
   4408  .IF(CATEGORIE_AFF=" ")OR(CATEGORIE_AFF="")
   4409  ..MSG="DLPLA020  CODE CATEGORIE DE L''AFFILIE MANQUANT  "
   4410  ..ERR_AFF="CDC"
   4411  ..CODE_ERREUR="D005"
   4412  .END
   4420  .IF((ERR_AFF<>"")AND(CD_RENOUV=1))
   4430  ..CHAIN"DLPNW001",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,CODE_COMPAGNIE
   4440  ..'',DATE_EFFET_POLICE,PROCEDURE,MSG,ERR_AFF
   4450  .END
   4460  .IF((ERR_AFF<>"")AND(CD_RENOUV=2))
   4470  ..CD_CIE=CODE_COMPAGNIE
   4480  ..CHAIN"DLPUP106",NUMERO_EMPL,DT_NAIS_AFF,CKDG_POL_AFF,CD_CIE
   4490  ..'',MSG,MOT_DE_PASSE,IDENTIFICATION,SW_MOD,NOM_MENU,DATE_EFFET_POLICE_AA
   4500  ..'',DATE_EFFET_POLICE_MM,DATE_EFFET_POLICE_JJ,TYPE_EM
   4510  .END
   4550  EXIT
   4560  !
   4570  ! VERIFICATION DES CODES EP
   4580  !
   4590  ENTRY VERIF_CODES_EP
   4600  .MSG=""
   4601  .IF((CD_EP_MIX_POL_AP="O")OR(CD_EP_MIX_POL_CP="O"))
   4602  ..MSG="DLPLA020  CODE E.P. MIXTE INUTILE"
   4603  .END
   4604  .IF(((CD_EP_SS_POL_AP="O")OR(CD_EP_SS_POL_CP="O")))
   4605  ..MSG="DLPLA020  CODE E.P. SOINS DE SANTE INUTILE"
   4606  .END
   4607  .IF((CD_EP_ACC_POL_AP="O")OR(CD_EP_ACC_POL_CP="O"))
   4608  ..MSG="DLPLA020  CODE E.P. ACCIDENT INUTILE"
   4609  .END
   4610  .IF((CD_EP_RETC_POL_A="O")OR(CD_EP_RETC_POL_C="O"))
   4611  ..MSG="DLPLA020  CODE E.P. RETRAITE COMPL. INUTILE"
   4612  .END
   4613  .IF((CD_EP_RET_POL_CP="O")AND((OK_RETR=0)OR(OK_INV=0)))
   4614  ..MSG="DLPLA020  CODE E.P. RETRAITE COTIS. INUTILE"
   4615  .END
   4616  .IF((CD_EP_RET_POL_CP=" ")AND(OK_RETR=1)AND(OK_INV=1))
   4617  ..MSG="DLPLA020  CODE E.P. RETRAITE COTIS. OBLIGATOIRE"
   4618  .END
   4619  .IF(CD_EP_RET_POL_AP="O")
   4620  ..MSG="DLPLA020  CODE E.P. RETRAITE ALLOC. INUTILE"
   4621  .END
   4622  .IF((CD_EP_DEC_POL_C(1)="O")OR(CD_EP_DEC_POL_C(2)="O"))
   4623  ..MSG="DLPLA020  CODE E.P. DECES COMPLEM. INUTILE"
   4624  .END
   4625  .IF((CD_EP_DEC_POL_CP="O"))
   4626  ..MSG="DLPLA020  CODE E.P. DECES COTIS. INUTILE"
   4627  .END
   4628  .IF(CD_RENOUV=1)
   4629  ..IF((CD_EP_DEC_POL_AP="O"))
   4630  ...MSG="DLPLA020  CODE E.P. DECES ALLOC. INUTILE"
   4631  ..END
   4632  .ELSE
   4633  ..IF(NUM_POL_DEC_AP<>0)
   4634  ...IF(CD_EP_DEC_POL_AP=" ")AND(OK_INV=1)
   4635  ....MSG="DLPLA020  CODE E.P. DECES ALLOC. OBLIGATOIRE"
   4636  ...END
   4637  ...IF(CD_EP_DEC_POL_AP="O")AND(OK_INV=0)
   4638  ....MSG="DLPLA020  CODE E.P. DECES ALLOC. INUTILE (PAS DE GAR. INVAL.)"
   4639  ...END
   4640  ..ELSE
   4641  ...IF(CD_EP_DEC_POL_AP="O")
   4642  ....MSG="DLPLA020  CODE E.P. DECES ALLOC. INUTILE"
   4643  ...END
   4644  ..END
   4645  .END
   4910  .IF((CD_RENOUV=1)AND(MSG<>""))
   4920  ..CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   4930  ..''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   4940  .END
   4950  .IF((CD_RENOUV=2)AND(MSG<>""))
   4960  ..CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   4970  ..''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   4980  ..''CKDG_POL_AFF
   4990  .END
   5000  EXIT
   5690  !
   5700  ! CALCUL DE L''AGE DE LA RETRAITE
   5710  !
   5720  ENTRY CALC_AGE_RETR
   5740  .AGE_RETR=65
   5780  EXIT
   5781  !
   5782  ! CALCUL DU % DE TEMPS PARTIEL
   5783  !
   5784  ENTRY CALC_PCT_PART
   5785  .IF(CATEGORIE_AFF="E")OR(CATEGORIE_AFF="L")
   5786  ..PCT_PART=1
   5787  .ELSE
   5788  ..IF(CATEGORIE_AFF="4")
   5789  ...PCT_PART=.1
   5790  ..ELSE
   5791  ...IF(CATEGORIE_AFF="G")
   5792  ....PCT_PART=.2
   5793  ...ELSE
   5794  ....IF(CATEGORIE_AFF="7")
   5795  .....PCT_PART=.25
   5796  ....ELSE
   5797  .....IF(CATEGORIE_AFF="5")
   5798  ......PCT_PART=.3
   5799  .....ELSE
   5800  ......IF(CATEGORIE_AFF="3")
   5801  .......PCT_PART=.33
   5802  ......ELSE
   5803  .......IF(CATEGORIE_AFF="J")
   5804  ........PCT_PART=.4
   5805  .......ELSE
   5806  ........IF(CATEGORIE_AFF="K")
   5807  .........PCT_PART=.45
   5808  ........ELSE
   5809  .........IF(CATEGORIE_AFF="T")
   5810  ..........PCT_PART=.5
   5811  .........ELSE
   5812  ..........IF(CATEGORIE_AFF="1")
   5813  ...........PCT_PART=.55
   5814  ..........ELSE
   5815  ...........IF(CATEGORIE_AFF="F")
   5816  ............PCT_PART=.6
   5817  ...........ELSE
   5818  ............IF(CATEGORIE_AFF="Q")
   5819  .............PCT_PART=.65
   5820  ............ELSE
   5821  .............IF(CATEGORIE_AFF="8")
   5822  ..............PCT_PART=.66
   5823  .............ELSE
   5824  ..............IF(CATEGORIE_AFF="W")
   5825  ...............PCT_PART=.7
   5826  ..............ELSE
   5827  ...............IF(CATEGORIE_AFF="U")
   5828  ...............PCT_PART=.75
   5829  ...............ELSE
   5830  ...............IF(CATEGORIE_AFF="V")
   5831  ...............PCT_PART=.8
   5832  ...............ELSE
   5833  ...............IF(CATEGORIE_AFF="Y")
   5834  ...............PCT_PART=.85
   5835  ...............ELSE
   5836  ...............IF(CATEGORIE_AFF="6")
   5837  ...............PCT_PART=.875
   5838  ...............ELSE
   5839  ...............IF(CATEGORIE_AFF="Z")
   5840  ...............PCT_PART=.9
   5841  ...............ELSE
   5842  ...............IF(CATEGORIE_AFF="2")
   5843  ...............PCT_PART=.95
   5844  ...............END
   5845  ...............END
   5846  ...............END
   5847  ...............END
   5848  ...............END
   5849  ...............END
   5850  ..............END
   5851  .............END
   5852  ............END
   5853  ...........END
   5854  ..........END
   5855  .........END
   5856  ........END
   5857  .......END
   5858  ......END
   5859  .....END
   5860  ....END
   5861  ...END
   5862  ..END
   5863  .END
   5864  .!SHOW"PCT PART = ";PCT_PART
   5865  .!WAIT
   5866  EXIT
   5867  !
   5868  ! BLOCAGE DE L''EMPLOYEUR JUSQU''A MISE A JOUR DU DERNIER NUMERO DE POLICE
   5869  !
   5870  ENTRY BLOCAGE_EMPL
   5871  .DO TRAP_ON_UP_SCRN_EMPL
   5872  .DO GETFIRST_UP_SCRN_EMPL_1(NUMERO_EMPL)
   5873  .IF FSI_UP_SCRN_EMPL<>"GOOD"
   5874  ..MSG="DLPLA020 PROBLEME DB POUR CET EMPLOYEUR   "+FSI_UP_SCRN_EMPL
   5875  ..DO TRAP_OFF_UP_SCRN_EMPL
   5880  ..IF((CD_RENOUV=1)AND(MSG<>""))
   5890  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   5900  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   5910  ..END
   5920  ..IF((CD_RENOUV=2)AND(MSG<>""))
   5930  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   5940  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   5950  ...''CKDG_POL_AFF
   5960  ..END
   5970  .END
   5980  .IF((TERMINAL_EMPL<>"")AND(TERMINAL_EMPL<>TERMINAL))
   5990  ..MSG="DLPLA020  EMPLOYEUR DEJA RETENU PAR LE TERMINAL "+TERMINAL_EMPL
   6000  ..DO TRAP_OFF_UP_SCRN_EMPL
   6010  ..IF((CD_RENOUV=1)AND(MSG<>""))
   6020  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6030  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   6040  ..END
   6050  ..IF((CD_RENOUV=2)AND(MSG<>""))
   6060  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6070  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   6080  ...''CKDG_POL_AFF
   6090  ..END
   6100  .ELSE
   6110  ..TERMINAL_EMPL=TERMINAL
   6120  ..DO UPDATE_UP_SCRN_EMPL
   6130  .END
   6140  .DO TRAP_OFF_UP_SCRN_EMPL
   6150  EXIT
   6160  !
   6170  !LECTURE DES DIFFERENTES DONNEES NECESSAIRES DE L''EMPLOYEUR
   6180  !
   6190  ENTRY VERIF_DONNEE_EMPL
   6200  .DO TRAP_ON_RD_TAUX_EMPL
   6210  .DO GETFIRST_RD_TAUX_EMPL_1(NUMERO_EMPL)
   6220  .IF FSI_RD_TAUX_EMPL<>"GOOD"
   6230  ..IF FSI_RD_TAUX_EMPL="NOTFOUND"
   6240  ...MSG="DLPLA020  EMPLOYEUR  INEXISTANT EN DB !!!! "
   6250  ...CODE_ERREUR="E005"
   6260  ..ELSE
   6270  ...MSG="DLPLA020 PROBLEME DE LECTURE DE CET EMPLOYEUR !!"+FSI(UP_TAUX_E MPL)
   6280  ...CODE_ERREUR="X001"
   6290  ..END
   6300  ..DO TRAP_OFF_RD_TAUX_EMPL
   6310  ..IF((CD_RENOUV=1)AND(MSG<>""))
   6320  ...CHAIN"DLPNW021",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6330  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG
   6340  ..END
   6350  ..IF((CD_RENOUV=2)AND(MSG<>""))
   6360  ...CHAIN"DLPNW040",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6370  ...''CODE_COMPAGNIE,DATE_EFFET_POLICE,PROCEDURE,MSG,DT_NAIS_AFF,
   6380  ...''CKDG_POL_AFF
   6390  ..END
   6430  .END
   6440  .DO TRAP_OFF_RD_TAUX_EMPL
   6450  .ER_EMPL=1
   6460  .MSG="DLPLA020 MANQ. DS EMPL.:"
   6470  .IF PLAF_SECURI_EMPL=0
   6480  ..MSG=MSG+" PLAF.SS."
   6490  ..ER_EMPL=2
   6500  ..CODE_ERREUR="E001"
   6510  .END
   6520  .IF PLAF_MALAD_EMPL=0
   6530  ..IF ER_EMPL=1
   6540  ...MSG=MSG+" PLAF.MAL."
   6550  ..ELSE
   6560  ...MSG=MSG+" MAL."
   6570  ..END
   6580  ..ER_EMPL=2
   6590  ..CODE_ERREUR="E001"
   6600  .END
   6601  .IF PLAF_CIE_EMPL=0
   6602  ..IF ER_EMPL=1
   6603  ...MSG=MSG+" PLAF.CIE"
   6604  ..ELSE
   6605  ...MSG=MSG+" CIE"
   6606  ..END
   6607  ..ER_EMPL=2
   6608  ..CODE_ERREUR="E015"
   6609  .END
   6610  .IF TAUX_EP_DEC_EMPL=0
   6620  ..MSG=MSG+" TAUX EP1"
   6630  ..ER_EMPL=3
   6640  ..CODE_ERREUR="E002"
   6650  .END
   6660  .IF TAUX_EP_RET_EMPL=0
   6670  ..IF ER_EMPL=3
   6680  ...MSG=MSG+" EP2"
   6690  ..ELSE
   6700  ...MSG=MSG+" TAUX EP2"
   6710  ..END
   6720  ..ER_EMPL=3
   6730  ..CODE_ERREUR="E002"
   6740  .END
   6750  .IF AGE_RTO_EMPL=0
   6760  ..MSG=MSG+" AGE RTO"
   6770  ..ER_EMPL=4
   6780  ..CODE_ERREUR="E003"
   6790  .END
   6800  .IF((ER_EMPL=2)OR(ER_EMPL=3)OR(ER_EMPL=4))
   6810  ..A=0
   6820  ..B=0
   6830  ..IF CD_RENOUV=1
   6840  ...CHAIN"DLPME005",MOT_DE_PASSE,IDENTIFICATION,NUMERO_EMPL,
   6850  ...''DATE_EFFET_POLICE,MSG,A,B
   6860  ..END
   6870  ..IF CD_RENOUV=2
   6880  ...CD_CIE=CODE_COMPAGNIE
   6890  ...CHAIN"DLPUP106",NUMERO_EMPL,DT_NAIS_AFF,CKDG_POL_AFF,CD_CIE
   6900  ...'',MSG,MOT_DE_PASSE,IDENTIFICATION,SW_MOD,NOM_MENU,DATE_EFFET_POLICE_AA
   6910  ...'',DATE_EFFET_POLICE_MM,DATE_EFFET_POLICE_JJ,TYPE_EM
   6920  ..END
   6960  .END
   6970  EXIT
   6980  !
   6990  !LECTURE DES TABLES ACTUARIELLES SUR LE FICHIER VSAM
   7000  !
   7010  ENTRY CALCUL_TABLE_ACTU
   7020  .PROGRAM REMPLIR_TAB98("REMPLIR_TAB98","GROUPE")
   7030  .DO REMPLIR_TAB98(L,D,N,S,C,M,R,V,SEX)
   7040  .RELEASE REMPLIR_TAB98
   7050  EXIT
   7060  !
   7070  ! CALCUL DES VALEURS T1 ET T2 QUI DEPENDENT DU PLAFOND DE PRESTATIONS SS
   7080  !
   7090  ENTRY CALCUL_T1_T2
   7100  .IF SALAIRE_AFF<PLAF_SECURI_EMPL
   7110  ..T1=SALAIRE_AFF
   7120  ..T2=0
   7130  .ELSE
   7140  ..T1=PLAF_SECURI_EMPL
   7150  ..T2=SALAIRE_AFF-T1
   7160  .END
   7161  .!SHOW"T1=";T1;"T2=";T2
   7162  .!WAIT
   7170  EXIT
   7171  !
   7172  ! CALCUL DU SALAIRE DECES ET INVALIDITE (UNIQUEMENT EN EMISSION COMPL -
   7173  !        A PARTIR DU 16/06/2000)
   7174  ENTRY CALCUL_SAL_DEC
   7175  .IF(CD_RENOUV=2)
   7176  ..SALAIRE_DEC ROUNDED(2)=(SALAIRE_AFF/12)*13.92
   7177  .ELSE
   7178  ..SALAIRE_DEC=SALAIRE_AFF
   7179  .END
   7182  .!SHOW"SALAIRE DEC = ";SALAIRE_DEC
   7183  .!WAIT
   7184  EXIT
   7185  !
   7190  ! CALCUL DES PARAMETRES RELATIFS A LA PRIME
   7200  !
   7210  ENTRY CALCUL_PARAM_PRIME
   7220  .ECP=VALUE(COD_FRAC_PRI(1,1))
   7230  .IF COD_FRAC_PRI(2)="1"
   7240  ..F=1
   7250  .ELSE
   7260  ..IF COD_FRAC_PRI(2)="2"
   7270  ...F=2
   7280  ..ELSE
   7290  ...IF COD_FRAC_PRI(2)="4"
   7300  ....F=4
   7310  ...ELSE
   7320  ....IF COD_FRAC_PRI(2)="9"
   7330  .....F=12
   7340  ....ELSE
   7350  .....F=0
   7360  ....END
   7370  ...END
   7380  ..END
   7390  .END
   7400  EXIT
   7410  !
   7420  ! CALCUL DES PARAMETRES RELATIFS A LA RENTE
   7430  !
   7440  ENTRY CALCUL_PARAM_RENTE
   7450  .ECR=VALUE(COD_FRAC_REN(1,1))
   7460  .K=VALUE(COD_FRAC_REN(2))
   7470  .IF K=9
   7480  ..K=12
   7490  .END
   7500  EXIT
   7510  !
   7520  ! CALCUL DE LA DUREE DU CONTRAT ET DE LA DUREE DU PAIEMENT DES PRIMES
   7530  !
   7540  ENTRY CALCUL_DUREE_CONT
   7550  .DAT_RETR=DATE_NAISS_AFF+AGE_RETR*10000+100
   7560  .PROGRAM CALC_PER("DLPRTPER","GROUPE")
   7570  .DUR_CONT_AN=0
   7580  .DUR_CONT_MOIS=0
   7590  .DO CALC_PER(DATE_EFFET_POLICE,DAT_RETR,DUR_CONT_AN,DUR_CONT_MOIS)
   7600  .IF AGE_AFF_MOIS=0
   7610  ..N1=DUR_CONT_AN
   7620  .ELSE
   7630  ..N1=DUR_CONT_AN+1
   7640  .END
   7650  .DUR_PRI_AN=0
   7660  .DUR_PRI_MOIS=0
   7670  .DO CALC_PER(DATE_EFFET_POLICE,DAT_RETR,DUR_PRI_AN,DUR_PRI_MOIS)
   7680  .RELEASE CALC_PER
   7690  .IF AGE_AFF_MOIS=0
   7700  ..M1=DUR_PRI_AN
   7710  .ELSE
   7720  ..M1=DUR_PRI_AN+1
   7730  .END
   7740  EXIT
   7750  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   7760  !
   7770  ! ASSURANCE RETRAITE
   7780  !
   7790  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   7800  ENTRY CALC_RETRAITE
   7810  .!
   7820  .! CALCUL DES ECHEANCES DE PRIMES ET DE RENTES
   7830  .!
   7850  .DATE_ECH_RETR=DATE_NAISS_AFF+AGE_RETR*10000
   7860  .DATE_PRI_RET=DATE_ECH_RETR
   7910  EXIT
   8310  !
   8320  ! COTISATION PERSONNELLE
   8330  !
   8340  ENTRY RETRAITE_COTIS
   8350  .PRIM_ANN_CP=(.05*T2)*PCT_PART
   8360  .PRIM_FRAC_CP ROUNDED(2)=PRIM_ANN_CP/F
   8370  .PRI_FR_CP_RETR=PRIM_FRAC_CP
   8380  .PRI_ANN_CP_RETR=PRIM_FRAC_CP*F
   8390  .!SHOW"PRIM ANN CP=";PRIM_ANN_CP
   8400  .!SHOW"PRI FR CP RETR=";PRI_FR_CP_RETR;
   8410  .!SHOW"PRI ANN CP RETR=";PRI_ANN_CP_RETR;
   8420  .!WAIT
   8430  EXIT
   8440  !
   8450  ! CALCUL DU TAUX DE LA PRIME RETRAITE
   8460  !
   8470  ENTRY RETRAITE_TAUX_CDSR
   8480  .PROGRAM DLTARIF600("DLTAR600","GROUPE")
   8490  .XA=AGE_AFF_AN
   8500  .XM=0
   8501  .N1=AGE_RETR-AGE_AFF_AN
   8502  .M1=N1
   8503  .!SHOW"AGE_AFF_AN = ";AGE_AFF_AN;" AGE_AFF_MOIS = ";AGE_AFF_MOIS
   8504  .!SHOW"XA = ";XA;"XM = ";XM;"N1 = ";N1;"M1 = ";M1;"F = ";F;"ECP = ";ECP;
   8505  .!WAIT
   8510  .DO DLTARIF600(XA,XM,N1,M1,F,ECP,L,D,N,S,C,M,R,V,TC)
   8520  .TCINV1=TC
   8530  .XA=AGE_AFF_AN+1
   8540  .N1=N1-1
   8550  .M1=M1-1
   8560  .DO DLTARIF600(XA,XM,N1,M1,F,ECP,L,D,N,S,C,M,R,V,TC)
   8570  .TCINV2=TC
   8580  .RELEASE DLTARIF600
   8590  .TAUX_CDSR ROUNDED(3)=((12-AGE_AFF_MOIS)*TCINV1+AGE_AFF_MOIS*TCINV2)/12
   8601  .TAUX_CDSR ROUNDED(5)=TAUX_CDSR/1000
   8610  .!SHOW"TAUX CDSR=";TAUX_CDSR
   8620  .!WAIT
   8621  .!
   8622  .! APPEL A LA ROUTINE CALC_TAUX_INV (DEROGATIONS TARIFAIRES)
   8623  .!
   8624  .!SHOW"AVANT APPEL A CALC TAUX INV"
   8625  .!SHOW"NUMERO EMPL = ";NUMERO_EMPL;"CD FILIALE POL = ";CD_FILIALE_POL
   8626  .!WAIT
   8627  .TAUX_PRI_INV=0
   8628  .PROGRAM CALC_TAUX_INV("CALC_TAUX_INV","GROUPE")
   8629  .DO CALC_TAUX_INV(NUMERO_EMPL,CD_FILIALE_POL,TAUX_PRI_INV)
   8630  .RELEASE CALC_TAUX_INV
   8631  .TAUX_CDSR ROUNDED(5)=TAUX_CDSR*(.93/TAUX_PRI_INV)
   8632  .!SHOW"TAUX CDSR APRES APPEL A CALC TAUX INV=";TAUX_CDSR
   8633  .!SHOW"TAUX PRI INV = ";TAUX_PRI_INV
   8634  .!WAIT
   8635  .!
   8636  .TAUX_PRI_RETR_CP=TAUX_CDSR*1000
   8640  .TARIF_RETR_COT=630
   8680  EXIT
   8960  !
   8970  ! CALCUL DU CAPITAL COTISATION
   8980  !
   8990  ENTRY RETRAITE_CAP_CP
   9000  .CAP_CP_RETR ROUNDED(2)=PRI_ANN_CP_RETR/TAUX_CDSR
   9040  .!SHOW"CAP CP RETR=";CAP_CP_RETR;
   9050  .!WAIT
   9100  EXIT
   9101  !
   9102  ! CAPITAL TOTAL A ASSURER
   9103  !
   9104  ENTRY RETRAITE_CAP_TOTAL
   9105  .CAP_TOT_RETR=CAP_CP_RETR
   9106  EXIT
   9640  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   9650  !
   9660  !    ASSURANCE DECES : NEANT DANS LE NOUVEAU PLAN EN EMISSION
   9670  !
   9680  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  12680  !
  12690  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  12700  !
  12710  ! ASSURANCE INVALIDITE
  12720  !
  12730  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  12740  !
  12741  ENTRY CALC_INVAL
  12742  .!
  12743  .!CALCUL DES ECHEANCES DE LA GARANTIE INVALIDITE (AGE TERME = 60 ANS)
  12744  .!
  12746  .DATE_ECH_INV=DATE_NAISS_AFF+60*10000
  12747  .DATE_PRI_INV=DATE_ECH_INV
  12752  EXIT
  12753  !
  12760  !EXONERATION DE PRIME
  12770  !
  12780  ENTRY INVAL_EXON
  12790  .EP_RETRAITE=TAUX_EP_RET_EMPL
  12800  .IF CD_EP_RET_POL_AP="O"
  12810  ..EP_AP_RETR ROUNDED(2)=(EP_RETRAITE*PRIM_FRAC_AP)/100
  12820  .ELSE
  12830  ..EP_AP_RETR=0
  12840  .END
  12850  .IF CD_EP_RET_POL_CP="O"
  12860  ..EP_CP_RETR ROUNDED(2)=(EP_RETRAITE*PRIM_FRAC_CP)/100
  12870  .ELSE
  12880  ..EP_CP_RETR=0
  12890  .END
  12900  .EP_DECES=TAUX_EP_DEC_EMPL
  12910  .IF CD_EP_DEC_POL_AP="O"
  12920  ..EP_PRIM_DEC ROUNDED(2)=(EP_DECES*PRIM_FRAC_DEC)/100
  12930  .ELSE
  12940  ..EP_PRIM_DEC=0
  12950  .END
  12951  .!SHOW"EP CP RETR = ";EP_CP_RETR;"EP AP RETR = ";EP_AP_RETR
  12952  .!SHOW"EP PRIM DEC = ";EP_PRIM_DEC
  12953  .!WAIT
  13010  .!
  13020  .! ATTRIBUTION DES SURPRIMES E.P.
  13030  .!
  13040  .PRI_EP_ACCID_AP=0
  13050  .PRI_EP_ACCID_CP=0
  13060  .PRI_EP_DEC_AP=EP_PRIM_DEC
  13070  .PRI_EP_DEC_CP=0
  13080  .PRI_EP_DEC_AC=0
  13090  .PRI_EP_DEC_CC=0
  13100  .PRI_EP_RETR_AP=EP_AP_RETR
  13110  .PRI_EP_RETR_CP=EP_CP_RETR
  13120  .PRI_EP_SS_AP=0
  13130  .PRI_EP_SS_CP=0
  13140  EXIT
  13150  !
  13160  ! RENTES
  13161  ! 20080613 : UTILISATION DU SALAIRE A TEMPS PLEIN
  13162  ! 20080613 : AJOUT DU CODE SERVICE
  13170  !
  13180  ENTRY INVAL_RENT
  13181  .!SALAIRE_AFF_INV ROUNDED(2)=SALAIRE_DEC*PCT_PART
  13182  .SALAIRE_AFF_INV ROUNDED(2)=SALAIRE_DEC
  13244  .!
  13245  .! CALCULS DES VALEURS S1,S2,S3
  13246  .!
  13247  .IF SALAIRE_AFF_INV>PLAF_MALAD_EMPL
  13248  ..S1=PLAF_MALAD_EMPL
  13249  ..S2=SALAIRE_AFF_INV-S1
  13250  .ELSE
  13260  ..S1=SALAIRE_AFF_INV
  13270  ..S2=0
  13280  .END
  13281  .!SHOW"SALAIRE AFF INV =";SALAIRE_AFF_INV
  13282  .!SHOW"S1 = ";S1;"S2 = ";S2;"S3 = ";S3
  13283  .!WAIT
  13284  .!
  13290  .! RENTE MALADIE-ACCIDENT VIE PRIVEE
  13291  .!
  13300  .!FORM_REN_MAL_AP ROUNDED(2)=.1*S1+.7*S2
  13301  .FORM_REN_MAL_AP ROUNDED(2)=(.1*S1+.7*S2)*PCT_PART
  13302  .!SHOW"FORM REN MAL AP AVANT LIMITATION = ";FORM_REN_MAL_AP
  13303  .IF FORM_REN_MAL_AP>PLAF_CIE_EMPL
  13304  ..FORM_REN_MAL_AP=PLAF_CIE_EMPL
  13305  .END
  13306  .!SHOW"FORM REN MAL AP APRES LIMITATION = ";FORM_REN_MAL_AP
  13307  .!WAIT
  13308  .!IF(CATEGORIE_AFF<>"L")
  13309  .IF(CODE_SERVICE_AFF(1,1)<>"L")
  13311  ..PRI_ANN_MAL_AP ROUNDED(2)=.0198*(FORM_REN_MAL_AP)
  13312  .ELSE
  13313  ..PRI_ANN_MAL_AP ROUNDED(2)=.0175*(FORM_REN_MAL_AP)
  13314  .END
  13315  .!SHOW"PRI ANN MAL AP=";PRI_ANN_MAL_AP
  13316  .!WAIT
  13317  .!
  13318  .! RENTE ACCIDENTS DU TRAVAIL : NEANT
  13319  .!
  13320  .FORM_REN_AT_AP=0
  13321  .PRI_ANN_AT_AP=0
  13322  .!
  13323  .! CALCUL DE LA RENTE INVALIDITE TOTALE
  13324  .!
  13325  .IF FORM_REN_MAL_AP>FORM_REN_AT_AP
  13326  ..REN_INVAL_AP=FORM_REN_MAL_AP
  13327  .ELSE
  13328  ..REN_INVAL_AP=FORM_REN_AT_AP
  13329  .END
  13350  EXIT
  13360  !
  13370  ! PRIME FRACTIONNEE TOTALE
  13380  !
  13390  ENTRY INVAL_PRI
  13400  .PRI_ANN_INV_AP=PRI_ANN_MAL_AP
  13410  .PRI_FR_INV_AP ROUNDED(2)=PRI_ANN_INV_AP/F
  13411  .!SHOW"PRI ANN INV AP = ";PRI_ANN_INV_AP;"PRI FR INV AP=";PRI_FR_INV_AP
  13412  .!WAIT
  13440  EXIT
  13460  !
  13470  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  13480  !
  13490  !SAUVETAGE DES DONNEES SUR LE FICHIER PROVISOIRE
  13500  !
  13510  !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  13520  ENTRY SAUVETAGE
  13530  .IF RESULTATA="FOUND"
  13540  ..UPDATE RESULTATA
  13550  .ELSE
  13560  ..TERMINAL_RESA=TERMINAL
  13570  ..INSERT RESULTATA
  13580  .END
  13590  .IF RESULTATB="FOUND"
  13600  ..UPDATE RESULTATB
  13610  .ELSE
  13620  ..TERMINAL_RESB=TERMINAL
  13630  ..INSERT RESULTATB
  13640  .END
  13650  .IF RESULTATC="FOUND"
  13660  ..UPDATE RESULTATC
  13670  .ELSE
  13680  ..TERMINAL_RESC=TERMINAL
  13690  ..INSERT RESULTATC
  13700  .END
  13710  .IF RESULTATD="FOUND"
  13720  ..UPDATE RESULTATD
  13730  .ELSE
  13740  ..TERMINAL_RESD=TERMINAL
  13750  ..INSERT RESULTATD
  13760  .END
  13770  EXIT
  13780  ! ------------------ 12/14/09 5:34:26 am START GENERATED CODE R43MI*PUAI
  13790  !
  13800  ENTRY GETFIRST_RD_TAUX_EMPL_1(ARG1)
  13810  .DB_CMD="GETFIRST"
  13820  .RD_TAUX_EMPL_SVKEY1=NUMERO_EMPL
  13830  .NUMERO_EMPL=ARG1
  13840  .RD_TAUX_EMPL_NKEYS=1
  13850  .DO PROG_RD_TAUX_EMPL
  13860  .IF NOT(RD_TAUX_EMPL="FOUND")
  13870  ..NUMERO_EMPL=RD_TAUX_EMPL_SVKEY1
  13880  .END
  13890  EXIT
  13900  !
  13910  ENTRY GETFIRST_UP_SCRN_EMPL_1(ARG1)
  13920  .DB_CMD="GETFIRST"
  13930  .UP_SCRN_EMPL_SVKEY1=NUMERO_EMPL
  13940  .NUMERO_EMPL=ARG1
  13950  .UP_SCRN_EMPL_NKEYS=1
  13960  .DO PROG_UP_SCRN_EMPL
  13970  .IF NOT(UP_SCRN_EMPL="FOUND")
  13980  ..NUMERO_EMPL=UP_SCRN_EMPL_SVKEY1
  13990  .END
  14000  EXIT
  14010  !
  14020  ENTRY TRAP_OFF_RD_TAUX_EMPL
  14030  .RD_TAUX_EMPL_TRAP=0
  14040  EXIT
  14050  !
  14060  ENTRY TRAP_OFF_UP_SCRN_EMPL
  14070  .UP_SCRN_EMPL_TRAP=0
  14080  EXIT
  14090  !
  14100  ENTRY TRAP_ON_RD_TAUX_EMPL
  14110  .RD_TAUX_EMPL_TRAP=1
  14120  EXIT
  14130  !
  14140  ENTRY TRAP_ON_UP_SCRN_EMPL
  14150  .UP_SCRN_EMPL_TRAP=1
  14160  EXIT
  14170  !
  14180  ENTRY UPDATE_UP_SCRN_EMPL
  14190  .DB_CMD="UPDATE"
  14200  .DO PROG_UP_SCRN_EMPL
  14210  EXIT
  14220  !
  14230  ENTRY VIEW_RD_TAUX_EMPL
  14240  .IF NOT(RD_TAUX_EMPL_OK)
  14250  ..PROGRAM EXT_RD_TAUX_EMPL("VIEWS:RD_GROUPE_TAUX_EMPL","VIEWPASS")
  14260  ..INTERFACE INT_RD_TAUX_EMPL("VIEWS:RD_GROUPE_TAUX_EMPL","VIEWPASS")
  14270  ..SMALL RD_TAUX_EMPL_SVKEY1
  14280  ..TEXT RD_TAUX_EMPL_VIEW(32)
  14290  ..RD_TAUX_EMPL_VIEW="RD_GROUPE_TAUX_EMPL"
  14300  ..RD_TAUX_EMPL_CUROPN=0
  14310  ..RD_TAUX_EMPL_ROWNO=0
  14320  ..RD_TAUX_EMPL_NKEYS=-1
  14330  ..RD_TAUX_EMPL_TRAP=0
  14340  ..DO DATABASE_INITIALIZATION
  14350  ..TEXT RD_TAUX_EMPL
  14360  ..TEXT FSI_RD_TAUX_EMPL
  14370  ..RD_TAUX_EMPL_OK=1
  14380  .END
  14390  EXIT
  14400  !
  14410  ENTRY VIEW_UP_SCRN_EMPL
  14420  .IF NOT(UP_SCRN_EMPL_OK)
  14430  ..PROGRAM EXT_UP_SCRN_EMPL("VIEWS:UP_GROUPE_SCRN_EMPL","VIEWPASS")
  14440  ..INTERFACE INT_UP_SCRN_EMPL("VIEWS:UP_GROUPE_SCRN_EMPL","VIEWPASS")
  14450  ..SMALL UP_SCRN_EMPL_SVKEY1
  14460  ..TEXT UP_SCRN_EMPL_VIEW(32)
  14470  ..UP_SCRN_EMPL_VIEW="UP_GROUPE_SCRN_EMPL"
  14480  ..UP_SCRN_EMPL_CUROPN=0
  14490  ..UP_SCRN_EMPL_ROWNO=0
  14500  ..UP_SCRN_EMPL_NKEYS=-1
  14510  ..UP_SCRN_EMPL_TRAP=0
  14520  ..DO DATABASE_INITIALIZATION
  14530  ..TEXT UP_SCRN_EMPL
  14540  ..TEXT FSI_UP_SCRN_EMPL
  14550  ..UP_SCRN_EMPL_OK=1
  14560  .END
  14570  EXIT
  14580  !
  14590  ENTRY DATABASE_INITIALIZATION
  14600  .TEXT DB_TAG:DB_TAG="R43MI*PUAI"
  14610  .BIG TARGET_ROWNO
  14620  .TEXT DUMMY
  14630  .DB_ZERO=0
  14640  .TEXT DB_CMD
  14650  .TEXT DB_VIEW(32)
  14660  .TEXT DB_EMSG(254)
  14670  EXIT
  14680  !
  14690  ENTRY PROG_RD_TAUX_EMPL
  14700  .DO EXT_RD_TAUX_EMPL(DB_CMD,DB_TAG,RD_TAUX_EMPL,
  14710  .''RD_TAUX_EMPL_NKEYS,RD_TAUX_EMPL_TRAP,TARGET_ROWNO,
  14720  .''INT_RD_TAUX_EMPL,
  14730  .''FSI_RD_TAUX_EMPL,DUMMY,
  14740  .''DB_EMSG,DB_VIEW)
  14750  EXIT
  14760  !
  14770  ENTRY PROG_UP_SCRN_EMPL
  14780  .DO EXT_UP_SCRN_EMPL(DB_CMD,DB_TAG,UP_SCRN_EMPL,
  14790  .''UP_SCRN_EMPL_NKEYS,UP_SCRN_EMPL_TRAP,TARGET_ROWNO,
  14800  .''INT_UP_SCRN_EMPL,
  14810  .''FSI_UP_SCRN_EMPL,DUMMY,
  14820  .''DB_EMSG,DB_VIEW)
  14830  EXIT
 '
]

{ #category : #accessing }
DPDetectorTest >> mockProgramWith: sourceCode [
	^ self mockProgramWith: sourceCode named: 'MockProgram'
]

{ #category : #accessing }
DPDetectorTest >> mockProgramWith: sourceCode named: programName [
	^ FAMIXContainerEntity new
		name: programName;
		sourceAnchor:
				(FAMIXSourceTextAnchor new
						source: sourceCode;
						yourself);
		yourself
]

{ #category : #accessing }
DPDetectorTest >> mockProgramsWithAll: collectionOfSourceCodes [
	^ Array streamContents: [:stream |
		collectionOfSourceCodes doWithIndex: [:each :index | 
			| program |
			program := self 
				mockProgramWith: each 
				named: 'MockProgram', index asString.
			stream nextPut: program ] ]
]

{ #category : #samples }
DPDetectorTest >> pizzaExample [
	^ 'I like pie
					pizza pie 
					apple pie 
					rad squared pi 
					and other PIes
					I like pie  
					pizza pie 
					apple pie 
					rad squared pi 
					and other PIes'. 
]

{ #category : #tests }
DPDetectorTest >> testAdditionOfElements [
	| myCol |
	myCol := OrderedCollection new.
	myCol add: 'I like pie'; add: 'pizza pie'; add: 'apple pie'. 
	myCol removeFirst.
	myCol add: 'another one'.
	
	self assert: (myCol at: 3) = 'another one'.
]

{ #category : #tests }
DPDetectorTest >> testDetector [
	| detector dupString |
	detector := DPDetector new
		parameters:
			(DPParameters new
				minNumberOfLines: 5;
				frequency: 2;
				minNumberOfCharacters: 30).
	dupString := 'I like pie  
			pizza pie 
			apple pie 
			rad squared pi 
			and other PIes'.
	detector
		addText: dupString lines
		firstLineIndex: 1
		lastLineIndex: 5
		fileAnchor: nil
		entity: (Mock new).
	detector
		addText: dupString lines
		firstLineIndex: 1
		lastLineIndex: 5
		fileAnchor: nil
		entity: (Mock new).
	self assert: detector getClonedFragments size equals: 1.
	self assert: detector getClonedFragments first members size equals: 2
]

{ #category : #tests }
DPDetectorTest >> testDupWithMantisComments [
	| dups dupSystem |
	dupSystem := DPDetector
		runOn: {(self mockProgramWith: self mantisCommentsExample)}
		parametrizedWith:
			(DPParameters new
				minNumberOfLines: 31;
				frequency: 2;
				minNumberOfCharacters: 75;
				cleaner: DPMantisCleaner new).
	dups := dupSystem fragments.
	self assert: dups size equals: 1.
	self assert: dups first members first endLine equals: 31.
	self assert: dups first members first startLine equals: 1.
	self assert: dups first members second endLine equals: 141.
	self assert: dups first members second startLine equals: 111
]

{ #category : #tests }
DPDetectorTest >> testHashBucketIsCorrectlyFilled [
	| detector |
	detector := DPDetector new
		parameters:
			(DPParameters new
				minNumberOfLines: 4;
				frequency: 2;
				minNumberOfCharacters: 5;
				cleaner: DPDummyCleaner new).
	detector runOn: {(self mockProgramWith: self pizzaExample)}.
	self assert: detector bucket size equals: 5.
	self assert: (detector bucket select: [ :fragment | fragment members size = 2 ]) size equals: 1.
	self assert: (detector bucket select: [ :fragment | fragment members size = 1 ]) size equals: 3
]

{ #category : #tests }
DPDetectorTest >> testMantisStream [
	| dups |
	dups := (DPDetector
		runOn: {(self mockProgramWith: self mantisExample)}
		parametrizedWith:
			(DPParameters new
				minNumberOfLines: 10;
				frequency: 2;
				minNumberOfCharacters: 75;
				cleaner: DPMantisCleaner new)) fragments.
	self assert: dups size equals: 2.
	self assert: dups second members first endLine equals: 566.
	self assert: dups second members first startLine equals: 556.
	self assert: dups second members second endLine equals: 609.
	self assert: dups second members second startLine equals: 600
]

{ #category : #tests }
DPDetectorTest >> testSimpleStream [
	| dups fragments |
	dups := (DPDetector
		runOn: {(self mockProgramWith: self pizzaExample)}
		parametrizedWith:
			(DPParameters new
				minNumberOfLines: 4;
				frequency: 2;
				minNumberOfCharacters: 5;
				cleaner: DPDummyCleaner new)) fragments.
	self assert: dups size equals: 1.
	fragments := dups first members.
	self assert: fragments first startLine equals: 1.
	self assert: fragments first endLine equals: 5.
	self assert: fragments second startLine equals: 6.
	self assert: fragments second endLine equals: 10
]
